#-----------------User---------------------------------------------------------------------

#find user by userId and pwd
User.validateUserRepository=SELECT * FROM projectairline.alr_user WHERE (user_id = :userId) AND (password = :password);

#-----------------Flight---------------------------------------------------------------------

#get flights between cities
Flight.getFlightsByRouteRepository=SELECT * FROM projectairline.alr_flights WHERE (origin_city_id = :origin) AND (dest_city_id = :destination);

#-----------------FlightAvail---------------------------------------------------------------------

#get available flights
FlightAvail.getFlightsAvailableRepository=SELECT * FROM projectairline.alr_flightavail WHERE (flight_id = :flightId) AND (flight_date = :travelOn);

#get available flights
FlightAvail.getFlightsAvailableOnDateRangeRepository=SELECT * FROM projectairline.alr_flightavail WHERE flight_date BETWEEN :startDate AND :endDate AND (flight_id = :flightId);

#update available seats for a flight
FlightAvail.updateFlightAvailSeatsRepository=UPDATE projectairline.alr_flightavail SET seats = :updatedSeats WHERE (flight_id = :flightId) AND (flight_date = :travelOn);

#-----------------Booking---------------------------------------------------------------------

#get bookings for a user
Booking.getBookingForUserRepository=SELECT * FROM projectairline.alr_bookings WHERE (user_id = :userId);

#get booking by reference id
Booking.getBookingByReferenceIdRepository=SELECT * FROM projectairline.alr_bookings WHERE (reference_id = :referenceId);

#update booking as cancelled
Booking.cancelBookingRepository=UPDATE projectairline.alr_bookings SET status = 'C' WHERE (reference_id = :referenceId);

#-----------------Passenger---------------------------------------------------------------------

#get passengers for a booking
Passenger.getBookingPassengersRepository=SELECT * FROM projectairline.alr_passengers WHERE (reference_id = :referenceId);

#cancel all passengers by reference id
Passenger.cancelPassengerById=UPDATE projectairline.alr_passengers SET status = 'C' WHERE (reference_id = :referenceId);

#cancel the passenger ticket
Passenger.cancelPassengerByTicketRepository=UPDATE projectairline.alr_passengers SET status = 'C' WHERE (ticketnumber = :ticketNumber) AND (reference_id = :referenceId);

#select count of cancelled tickets for a booking reference
Passenger.getCancelledTicketsCount=select count(*) FROM projectairline.alr_passengers where (reference_id = :referenceId) and (status = 'C');

#--------------------------------------------------------------------------------------